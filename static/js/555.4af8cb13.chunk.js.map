{"version":3,"file":"static/js/555.4af8cb13.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Content/Profile/ProfileInfo/ProfileInfo.module.css?44c3","webpack://social-network/./src/components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?4153","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusContainer.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Content/Profile/MyPosts/NewPost/NewPostForm/NewPostForm.module.css?e675","components/Content/Profile/MyPosts/NewPost/NewPostForm/NewPostForm.jsx","components/Content/Profile/MyPosts/NewPost/NewPost.jsx","webpack://social-network/./src/components/Content/Profile/MyPosts/Posts/Post/Post.module.css?bc82","components/Content/Profile/MyPosts/Posts/Post/Post.jsx","webpack://social-network/./src/components/Content/Profile/MyPosts/Posts/Posts.module.css?3af7","components/Content/Profile/MyPosts/Posts/Posts.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"bg_img\":\"ProfileInfo_bg_img__8DoYJ\",\"header\":\"ProfileInfo_header__QjUME\",\"user_img\":\"ProfileInfo_user_img__KfRKm\",\"user\":\"ProfileInfo_user__FSNkS\",\"user_name\":\"ProfileInfo_user_name__cbT6x\",\"user_info\":\"ProfileInfo_user_info__AzmIC\",\"contactLink\":\"ProfileInfo_contactLink__1w65O\"};","// extracted by mini-css-extract-plugin\nexport default {\"status\":\"ProfileStatus_status__m0Z-5\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, updateStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        updateStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => setEditMode(true);\r\n    \r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const changeStatus = (e) => {\r\n        updateStatus(e.target.value);\r\n    }\r\n\r\n    const showPlainStatus = () => {\r\n        return <span onClick={activateEditMode}>{props.status || \"My status\"}</span>;\r\n    }\r\n\r\n    const showEditModeStatus = () => {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}\r\n                    onChange={changeStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode ? showEditModeStatus() : showPlainStatus()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateStatus } from \"../../../../../redux/reducers/profileReducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileStatusContainer = ({ status, getStatus, updateStatus }) => {\r\n    return (\r\n        <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n    );\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateStatus } )(ProfileStatusContainer);","import s from \"./ProfileInfo.module.css\";\r\nimport defaultBg from '../../../../assets/images/sydneyBg.jpg';\r\nimport userPhoto from \"../../../../assets/images/cat.png\";\r\n\r\nimport ProfileStatusContainer from \"./ProfileStatus/ProfileStatusContainer\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let createContactLinks = () => {\r\n        let unsortedLinks = Object.values(props.profile.contacts);\r\n        let sortedLinks = [];\r\n\r\n        unsortedLinks.forEach(element => {\r\n            if (element) sortedLinks.push(element);\r\n        });\r\n\r\n        return sortedLinks.map((link, index) => {\r\n            if (index === sortedLinks.length - 1) return <a href={link} key={link} className={s.contactLink} rel=\"noreferrer\"> {link}.</a>\r\n            return <a href={link} key={link} className={s.contactLink} target=\"_blank\" rel=\"noreferrer\"> {link}, </a>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.bg_img} style={{ backgroundImage: `url(${props.profile.photos.large || defaultBg})` }}></div>\r\n            <div className={s.header}>\r\n                <div>\r\n                    <img src={props.profile.photos.large || userPhoto} alt=\"\" className={s.user_img} />\r\n                </div>\r\n                <div className={s.user}>\r\n                    <div className={s.user_name}>{props.profile.fullName}</div>\r\n\r\n                    <ProfileStatusContainer userId={props.profile.userId}/>\r\n\r\n                    <div className={s.user_info}>\r\n                        <div>About me: <span>{props.profile.aboutMe}</span></div>\r\n                        <div>Ищу работу: <span>{props.profile.lookingForAJob ? \"да\" : \"нет\"}</span></div>\r\n                        <div>Описание: <span>{props.profile.lookingForAJobDescription}</span></div>\r\n\r\n                        <div>Контакты:\r\n                            {createContactLinks()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"newPost\":\"NewPostForm_newPost__QRgM2\",\"newPostTextarea\":\"NewPostForm_newPostTextarea__viYSu\",\"btn\":\"NewPostForm_btn__9DYG7\"};","import classes from './NewPostForm.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { fieldRequired, maxLengthCreator } from '../../../../../../utils/validators/validator';\r\nimport { TextArea } from '../../../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.newPost}>\r\n            <Field\r\n                component={TextArea}\r\n                name={\"newPostText\"}\r\n                placeholder=\"your news...\"\r\n                className={classes.newPostTextarea}\r\n                validate={[fieldRequired, maxLength30]} />\r\n            <div>\r\n                <button className={classes.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nNewPostForm = reduxForm({ form: \"newPost\" })(NewPostForm);\r\n\r\nexport default NewPostForm;\r\n","import NewPostForm from \"./NewPostForm/NewPostForm\";\r\n\r\nlet NewPost = (props) => {\r\n\r\n    let formSubmit = (formData) => {\r\n        props.addPostActionCreator(formData); \r\n    }\r\n    return (\r\n        <NewPostForm onSubmit={formSubmit} />\r\n    );\r\n}\r\n\r\nexport default NewPost;","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__BWgMK\",\"content\":\"Post_content__1mOUI\",\"like\":\"Post_like__5E5Yo\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    const addLike = () => {\r\n        props.addLike(props.postId);\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <div className=\"img\">\r\n                <img src=\"https://artemonsalon.ru/wp-content/uploads/2020/11/95_oooo.plus_.png\" alt=\"profile img\" />\r\n            </div>\r\n            <div className={s.content}>\r\n                <div className=\"message\">{props.message}</div>\r\n                <div className={s.like} onClick={addLike}>\r\n                    <img src=\"https://www.pngkey.com/png/full/286-2862058_thumbs-down-buttons-royalty-free-cliparts-vectors-green.png\" alt=\"like\" />\r\n                    {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__ko85S\"};","import Post from \"./Post/Post\";\r\nimport s from \"./Posts.module.css\";\r\n\r\nconst Posts = (props) => {\r\n\r\n    let postsElements = props.posts\r\n        .map(post => <Post key={post.id} postId={post.id} message={post.message} likesCount={post.likesCount} addLike={props.addLike} />)\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport NewPost from \"./NewPost/NewPost\";\r\nimport Posts from \"./Posts/Posts\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>My Posts</h2>\r\n            <NewPost userId={props.userId} addPostActionCreator={props.addPostActionCreator} />\r\n            <Posts posts={props.posts} addLike={props.addLike} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import { connect } from \"react-redux/es/exports\";\r\nimport { addLike, addPostActionCreator } from \"../../../../redux/reducers/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport React from \"react\";\r\n\r\nlet MyPostsContainer = (props) => {\r\n    return (\r\n        <MyPosts {...props} />\r\n    );\r\n} \r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    };\r\n};\r\n\r\nMyPostsContainer = React.memo(MyPostsContainer);\r\n\r\nexport default connect(mapStateToProps, { addPostActionCreator, addLike })(MyPostsContainer);","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} />\r\n            <MyPostsContainer userId={props.profile.userId}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\n\r\nimport { getProfile } from \"../../../redux/reducers/profileReducer\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport WithAuthRedirect from \"../../../hoc/WithAuthRedirect\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { WithRouter } from \"../../../hoc/WithRouter\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        // URL changes when user is clicked on \"Users\" page\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) userId = this.props.currentUserProfileId;\r\n        this.props.getProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) return <Preloader />\r\n        return (\r\n            <Profile {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    currentUserProfileId: state.auth.userId,\r\n});\r\n\r\n\r\nexport default compose(connect(mapStateToProps, { getProfile }), WithRouter, WithAuthRedirect)(ProfileContainer);","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet WithAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        // URL changes when user is clicked on \"Users\" page\r\n        let userId = props.router?.params.userId;\r\n        if (!props.isAuth && !userId) return <Navigate to=\"/login\" />\r\n        return <Component {...props} />\r\n    }\r\n    \r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default WithAuthRedirect;"],"names":["props","editMode","setEditMode","useState","status","updateStatus","useEffect","activateEditMode","deactivateEditMode","changeStatus","e","target","value","_jsx","className","styles","children","type","autoFocus","onBlur","onChange","onClick","connect","state","profilePage","_ref","getStatus","ProfileStatus","_jsxs","s","style","backgroundImage","concat","profile","photos","large","defaultBg","src","userPhoto","alt","fullName","ProfileStatusContainer","userId","aboutMe","lookingForAJob","lookingForAJobDescription","createContactLinks","unsortedLinks","Object","values","contacts","sortedLinks","forEach","element","push","map","link","index","length","href","rel","maxLength30","maxLengthCreator","NewPostForm","onSubmit","handleSubmit","classes","Field","component","TextArea","name","placeholder","validate","fieldRequired","reduxForm","form","formData","addPostActionCreator","message","addLike","postId","likesCount","postsElements","posts","post","Post","id","NewPost","Posts","MyPostsContainer","MyPosts","React","postsData","ProfileInfo","ProfileContainer","componentDidMount","this","router","params","currentUserProfileId","getProfile","render","Profile","Preloader","compose","auth","WithRouter","WithAuthRedirect","Component","isAuth","_props$router","Navigate","to"],"sourceRoot":""}