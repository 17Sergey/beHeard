{"version":3,"file":"static/js/903.1557c8fd.chunk.js","mappings":"iMACA,SAAgB,QAAU,0BCA1B,EAAyB,2BAAzB,EAA6D,2BAA7D,EAAiG,2B,uBCEjG,MAUA,EAVoBA,IAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAASC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKR,EAAMS,OAAQC,IAAI,SAASN,UAAWC,KAChDE,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIX,EAAMG,UAAWS,GAAWA,EAAQC,SAAWT,EAAW,KAAKC,SAAEN,EAAMe,SAClF,ECRd,EAA0B,6BCS1B,EARqBf,IAEbO,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,SACrBN,EAAMgB,UCJnB,EAA6B,mCAA7B,EAAqF,2CAArF,EAAsI,4B,yCCItI,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAErC,IAAIC,EAAkBnB,IAEdG,EAAAA,EAAAA,MAAA,QAAMiB,SAAUpB,EAAMqB,aAAcjB,UAAWkB,EAAmBhB,SAAA,EAC9DC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACFC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAeV,GAC1BF,KAAM,iBACNa,YAAY,kBACZxB,UAAWkB,KACff,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQH,UAAWkB,EAAYhB,SAAC,cAMhDa,GAAiBU,EAAAA,EAAAA,GAAU,CAAEC,KAAM,cAAlBD,CAAkCV,GAEnD,UCZA,QAXkBnB,IAOVO,EAAAA,EAAAA,KAACY,EAAc,CAACC,SALFW,IAEd/B,EAAMgC,WAAWD,EAAS,ICwBlC,EAvBiB/B,IAEb,IAAIiC,EAAkBjC,EAAMkC,QACvBC,KAAIC,IAAU7B,EAAAA,EAAAA,KAAC8B,EAAU,CAAiBtB,KAAMqB,EAAOrB,KAAMb,GAAIkC,EAAOlC,GAAIO,OAAQ2B,EAAO3B,QAA5D2B,EAAOlC,MACvCoC,EAAmBtC,EAAMuC,SACxBJ,KAAInB,IAAWT,EAAAA,EAAAA,KAACiC,EAAW,CAAkBxB,QAASA,EAAQA,SAA7BA,EAAQd,MAE9C,OACIC,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAnC,SAAA,EACIC,EAAAA,EAAAA,KAACmC,EAAU,CAACV,WAAYhC,EAAMgC,cAE9B7B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAE6B,QAAQ5B,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAEsC,cAAcrC,SAC3B2B,KAEL1B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAEkC,SAASjC,SACtBgC,SAGV,ECZX,SAAeM,EAAAA,EAAAA,KAASC,EAAAA,EAAAA,KAPDC,IACZ,CACHZ,QAASY,EAAMC,YAAYb,QAC3BK,SAAUO,EAAMC,YAAYR,YAIa,CAAEP,WAAW,MAAIgB,EAAAA,EAAlE,CAAqFC,E,mECOrF,QAlBwBC,IAebL,EAAAA,EAAAA,KANgBC,IACZ,CACHK,OAAQL,EAAMM,KAAKD,UAIpBN,EAbkB7C,IAAW,IAADqD,EAE/B,IAAIC,EAAqB,QAAfD,EAAGrD,EAAMuD,cAAM,IAAAF,OAAA,EAAZA,EAAcG,OAAOF,OAClC,OAAKtD,EAAMmD,QAAWG,GACf/C,EAAAA,EAAAA,KAAC2C,EAAS,IAAKlD,KADeO,EAAAA,EAAAA,KAACkD,EAAAA,GAAQ,CAAC7C,GAAG,UACnB,G","sources":["webpack://social-network/./src/components/Content/Dialogs/Dialogs.module.css?5cdb","webpack://social-network/./src/components/Content/Dialogs/DialogItem/DialogItem.module.css?2db2","components/Content/Dialogs/DialogItem/DialogItem.jsx","webpack://social-network/./src/components/Content/Dialogs/MessageItem/MessageItem.module.css?af73","components/Content/Dialogs/MessageItem/MessageItem.jsx","webpack://social-network/./src/components/Content/Dialogs/NewMessage/NewMessageForm.module.css?4d82","components/Content/Dialogs/NewMessage/NewMessageForm.jsx","components/Content/Dialogs/NewMessage/NewMessage.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__dwBcH\"};","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"DialogItem_active__oCu5B\",\"dialog\":\"DialogItem_dialog__cGlVs\",\"avatar\":\"DialogItem_avatar__cDcCM\"};","import s from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.avatar} alt=\"avatar\" className={s.avatar} />\r\n            <NavLink to={path} className={navData => navData.isActive ? s.active : null}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__mFZW-\"};","import s from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageItem;","// extracted by mini-css-extract-plugin\nexport default {\"newMessage\":\"NewMessageForm_newMessage__QqL8X\",\"newMessageTextarea\":\"NewMessageForm_newMessageTextarea__n6yks\",\"btn\":\"NewMessageForm_btn__KOBWL\"};","import classes from './NewMessageForm.module.css'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { fieldRequired, maxLengthCreator } from '../../../../utils/validators/validator';\r\nimport { TextArea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nlet NewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.newMessage}>\r\n            <Field\r\n                component={TextArea}\r\n                validate={[fieldRequired, maxLength30]}\r\n                name={\"newMessageText\"}\r\n                placeholder=\"your message...\"\r\n                className={classes.newMessageTextarea} />\r\n            <div>\r\n                <button className={classes.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nNewMessageForm = reduxForm({ form: \"newMessage\" })(NewMessageForm);\r\n\r\nexport default NewMessageForm;\r\n","import NewMessageForm from \"./NewMessageForm\";\r\n\r\nlet NewMessage = (props) => {\r\n\r\n    let formSubmit = (formData) => {\r\n        // let newPost = {...formData, userId: props.userId};\r\n        props.addMessage(formData);\r\n    }\r\n    return (\r\n        <NewMessageForm onSubmit={formSubmit} />\r\n    );\r\n}\r\n\r\nexport default NewMessage;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\n\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let dialogsElements = props.dialogs\r\n        .map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} avatar={dialog.avatar} />);\r\n    let messagesElements = props.messages\r\n        .map(message => <MessageItem key={message.id} message={message.message} />);\r\n\r\n    return (\r\n        <>\r\n            <NewMessage addMessage={props.addMessage}/>\r\n            \r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogs_items}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux/es/exports\";\r\nimport { compose } from \"redux\";\r\n\r\nimport WithAuthRedirect from \"../../../hoc/WithAuthRedirect\";\r\nimport { addMessage } from \"../../../redux/reducers/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    };\r\n}\r\n\r\nexport default compose( connect(mapStateToProps, { addMessage }), WithAuthRedirect )(Dialogs);\r\n","import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet WithAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        // URL changes when user is clicked on \"Users\" page\r\n        let userId = props.router?.params.userId;\r\n        if (!props.isAuth && !userId) return <Navigate to=\"/login\" />\r\n        return <Component {...props} />\r\n    }\r\n    \r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default WithAuthRedirect;"],"names":["props","path","id","_jsxs","className","s","children","_jsx","src","avatar","alt","NavLink","to","navData","isActive","name","message","maxLength30","maxLengthCreator","NewMessageForm","onSubmit","handleSubmit","classes","Field","component","TextArea","validate","fieldRequired","placeholder","reduxForm","form","formData","addMessage","dialogsElements","dialogs","map","dialog","DialogItem","messagesElements","messages","MessageItem","_Fragment","NewMessage","dialogs_items","compose","connect","state","dialogsPage","WithAuthRedirect","Dialogs","Component","isAuth","auth","_props$router","userId","router","params","Navigate"],"sourceRoot":""}